// Code generated by MockGen. DO NOT EDIT.
// Source: server.go

// Package mock_card is a generated GoMock package.
package mock_card

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockHandler is a mock of Handler interface.
type MockHandler struct {
	ctrl     *gomock.Controller
	recorder *MockHandlerMockRecorder
}

// MockHandlerMockRecorder is the mock recorder for MockHandler.
type MockHandlerMockRecorder struct {
	mock *MockHandler
}

// NewMockHandler creates a new mock instance.
func NewMockHandler(ctrl *gomock.Controller) *MockHandler {
	mock := &MockHandler{ctrl: ctrl}
	mock.recorder = &MockHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandler) EXPECT() *MockHandlerMockRecorder {
	return m.recorder
}

// CreateCard mocks base method.
func (m *MockHandler) CreateCard(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateCard", c)
}

// CreateCard indicates an expected call of CreateCard.
func (mr *MockHandlerMockRecorder) CreateCard(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCard", reflect.TypeOf((*MockHandler)(nil).CreateCard), c)
}

// CreateCards mocks base method.
func (m *MockHandler) CreateCards(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateCards", c)
}

// CreateCards indicates an expected call of CreateCards.
func (mr *MockHandlerMockRecorder) CreateCards(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCards", reflect.TypeOf((*MockHandler)(nil).CreateCards), c)
}

// DeleteCard mocks base method.
func (m *MockHandler) DeleteCard(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteCard", c)
}

// DeleteCard indicates an expected call of DeleteCard.
func (mr *MockHandlerMockRecorder) DeleteCard(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCard", reflect.TypeOf((*MockHandler)(nil).DeleteCard), c)
}

// ListCards mocks base method.
func (m *MockHandler) ListCards(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ListCards", c)
}

// ListCards indicates an expected call of ListCards.
func (mr *MockHandlerMockRecorder) ListCards(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCards", reflect.TypeOf((*MockHandler)(nil).ListCards), c)
}

// UpdateCard mocks base method.
func (m *MockHandler) UpdateCard(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateCard", c)
}

// UpdateCard indicates an expected call of UpdateCard.
func (mr *MockHandlerMockRecorder) UpdateCard(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCard", reflect.TypeOf((*MockHandler)(nil).UpdateCard), c)
}
